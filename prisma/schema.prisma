generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aluno {
  cod_aluno   Int         @id @default(autoincrement()) @db.UnsignedInt
  nome        String      @db.VarChar(127)
  cpf         String      @unique(map: "cpf_UNIQUE") @db.VarChar(127)
  telefone    String      @db.VarChar(127)
  cep         String      @db.VarChar(127)
  estado      String      @db.VarChar(127)
  cidade      String      @db.VarChar(127)
  bairro      String      @db.VarChar(127)
  rua         String      @db.VarChar(127)
  numero      String      @db.VarChar(127)
  complemento String?     @db.VarChar(127)
  status      Boolean     @default(true)
  matricula   matricula[]
}

model professor {
  cod_professor        Int                    @id @default(autoincrement()) @db.UnsignedInt
  nome                 String                 @db.VarChar(127)
  cpf                  String                 @unique(map: "cpf_UNIQUE") @db.VarChar(127)
  telefone             String                 @db.VarChar(127)
  data_admissao        DateTime               @db.Date
  modalidade_professor modalidade_professor[]
}

model modalidade {
  cod_modalidade       Int                    @id @default(autoincrement()) @db.UnsignedInt
  descricao            String                 @unique(map: "descricao_UNIQUE") @db.VarChar(127)
  modalidade_professor modalidade_professor[]
}

model modalidade_professor {
  cod_modalidade_professor Int        @id @default(autoincrement()) @db.UnsignedInt
  cod_professor            Int        @db.UnsignedInt
  cod_modalidade           Int        @db.UnsignedInt
  modalidade               modalidade @relation(fields: [cod_modalidade], references: [cod_modalidade], onDelete: NoAction, onUpdate: NoAction, map: "cod_modalidade_FK")
  professor                professor  @relation(fields: [cod_professor], references: [cod_professor], onDelete: NoAction, onUpdate: NoAction, map: "cod_professor_FK")
  turma                    turma[]

  @@index([cod_modalidade], map: "cod_modalidade_FK")
  @@index([cod_professor], map: "cod_professor_FK")
}

model turma {
  cod_turma                Int                  @id @default(autoincrement()) @db.UnsignedInt
  nome                     String               @db.VarChar(127)
  horarios                 String               @db.VarChar(127)
  cod_modalidade_professor Int                  @db.UnsignedInt
  matricula                matricula[]
  modalidade_professor     modalidade_professor @relation(fields: [cod_modalidade_professor], references: [cod_modalidade_professor], onDelete: NoAction, onUpdate: NoAction, map: "cod_modalidade_professor_FK")

  @@index([cod_modalidade_professor], map: "cod_modalidade_professor_FK")
}

model matricula {
  cod_matricula  Int          @id @default(autoincrement()) @db.UnsignedInt
  data_matricula DateTime     @db.Date
  cod_turma      Int          @db.UnsignedInt
  cod_aluno      Int          @db.UnsignedInt
  frequencia     frequencia[]
  aluno          aluno        @relation(fields: [cod_aluno], references: [cod_aluno], onDelete: NoAction, onUpdate: NoAction, map: "cod_aluno_FK")
  turma          turma        @relation(fields: [cod_turma], references: [cod_turma], onDelete: NoAction, onUpdate: NoAction, map: "cod_turma_FK")

  @@index([cod_aluno], map: "cod_aluno_FK")
  @@index([cod_turma], map: "cod_turma_FK")
}

model frequencia {
  cod_frequencia Int       @id @default(autoincrement()) @db.UnsignedInt
  data_aula      DateTime  @db.Date
  presenca       Int       @db.TinyInt
  cod_matricula  Int       @db.UnsignedInt
  matricula      matricula @relation(fields: [cod_matricula], references: [cod_matricula], onDelete: NoAction, onUpdate: NoAction, map: "cod_matricula_FK")

  @@index([cod_matricula], map: "cod_matricula_FK")
}

model funcionario {
  cod_funcionario  Int       @id @default(autoincrement()) @db.UnsignedInt
  nome             String    @db.VarChar(127)
  email            String    @unique(map: "email_UNIQUE") @db.VarChar(127)
  senha            String    @db.VarChar(127)
  permissao        Int       @default(1)
}